{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.14", "generated_at": "2024-05-08T15:36:34.580414Z", "invocation_id": "50863d21-2071-4f54-814b-13d749511ba5", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-08T15:36:33.896277Z", "completed_at": "2024-05-08T15:36:34.232870Z"}, {"name": "execute", "started_at": "2024-05-08T15:36:34.234620Z", "completed_at": "2024-05-08T15:36:34.505115Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.6779193878173828, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b43188-0202-a835-0002-461e001754ca"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.Revolt_BI_Hackathon.null_detector", "compiled": true, "compiled_code": "\n\n\n\nSELECT\n\n    --COUNT(*) OVER() AS ID_total_rows,\n    --COUNT(CASE WHEN ID IS NULL THEN 1 END) AS \"ID_missing\",\n    ROUND(100.0 * COUNT(CASE WHEN ID IS NULL THEN 1 END) / NULLIF(COUNT(*), 0), 2) AS \"ID_missing_percentage\", \n\n    --COUNT(*) OVER() AS CUSTOMER_STATUS_total_rows,\n    --COUNT(CASE WHEN CUSTOMER_STATUS IS NULL THEN 1 END) AS \"CUSTOMER_STATUS_missing\",\n    ROUND(100.0 * COUNT(CASE WHEN CUSTOMER_STATUS IS NULL THEN 1 END) / NULLIF(COUNT(*), 0), 2) AS \"CUSTOMER_STATUS_missing_percentage\", \n\n    --COUNT(*) OVER() AS CUSTOMER_TYPE_total_rows,\n    --COUNT(CASE WHEN CUSTOMER_TYPE IS NULL THEN 1 END) AS \"CUSTOMER_TYPE_missing\",\n    ROUND(100.0 * COUNT(CASE WHEN CUSTOMER_TYPE IS NULL THEN 1 END) / NULLIF(COUNT(*), 0), 2) AS \"CUSTOMER_TYPE_missing_percentage\", \n\n    --COUNT(*) OVER() AS CUSTOMER_CREATED_total_rows,\n    --COUNT(CASE WHEN CUSTOMER_CREATED IS NULL THEN 1 END) AS \"CUSTOMER_CREATED_missing\",\n    ROUND(100.0 * COUNT(CASE WHEN CUSTOMER_CREATED IS NULL THEN 1 END) / NULLIF(COUNT(*), 0), 2) AS \"CUSTOMER_CREATED_missing_percentage\", \n\n    --COUNT(*) OVER() AS FIRST_NAME_HASH_total_rows,\n    --COUNT(CASE WHEN FIRST_NAME_HASH IS NULL THEN 1 END) AS \"FIRST_NAME_HASH_missing\",\n    ROUND(100.0 * COUNT(CASE WHEN FIRST_NAME_HASH IS NULL THEN 1 END) / NULLIF(COUNT(*), 0), 2) AS \"FIRST_NAME_HASH_missing_percentage\", \n\n    --COUNT(*) OVER() AS SEX_total_rows,\n    --COUNT(CASE WHEN SEX IS NULL THEN 1 END) AS \"SEX_missing\",\n    ROUND(100.0 * COUNT(CASE WHEN SEX IS NULL THEN 1 END) / NULLIF(COUNT(*), 0), 2) AS \"SEX_missing_percentage\", \n\n    --COUNT(*) OVER() AS CUSTOMER_EMAIL_HASH_total_rows,\n    --COUNT(CASE WHEN CUSTOMER_EMAIL_HASH IS NULL THEN 1 END) AS \"CUSTOMER_EMAIL_HASH_missing\",\n    ROUND(100.0 * COUNT(CASE WHEN CUSTOMER_EMAIL_HASH IS NULL THEN 1 END) / NULLIF(COUNT(*), 0), 2) AS \"CUSTOMER_EMAIL_HASH_missing_percentage\", \n\n    --COUNT(*) OVER() AS CUSTOMER_PHONE_HASH_total_rows,\n    --COUNT(CASE WHEN CUSTOMER_PHONE_HASH IS NULL THEN 1 END) AS \"CUSTOMER_PHONE_HASH_missing\",\n    ROUND(100.0 * COUNT(CASE WHEN CUSTOMER_PHONE_HASH IS NULL THEN 1 END) / NULLIF(COUNT(*), 0), 2) AS \"CUSTOMER_PHONE_HASH_missing_percentage\", \n\n    --COUNT(*) OVER() AS LAST_ORDER_DATE_total_rows,\n    --COUNT(CASE WHEN LAST_ORDER_DATE IS NULL THEN 1 END) AS \"LAST_ORDER_DATE_missing\",\n    ROUND(100.0 * COUNT(CASE WHEN LAST_ORDER_DATE IS NULL THEN 1 END) / NULLIF(COUNT(*), 0), 2) AS \"LAST_ORDER_DATE_missing_percentage\", \n\n    --COUNT(*) OVER() AS RECENCY_DAYS_total_rows,\n    --COUNT(CASE WHEN RECENCY_DAYS IS NULL THEN 1 END) AS \"RECENCY_DAYS_missing\",\n    ROUND(100.0 * COUNT(CASE WHEN RECENCY_DAYS IS NULL THEN 1 END) / NULLIF(COUNT(*), 0), 2) AS \"RECENCY_DAYS_missing_percentage\", \n\n    --COUNT(*) OVER() AS TRANSACTION_COUNT_total_rows,\n    --COUNT(CASE WHEN TRANSACTION_COUNT IS NULL THEN 1 END) AS \"TRANSACTION_COUNT_missing\",\n    ROUND(100.0 * COUNT(CASE WHEN TRANSACTION_COUNT IS NULL THEN 1 END) / NULLIF(COUNT(*), 0), 2) AS \"TRANSACTION_COUNT_missing_percentage\", \n\n    --COUNT(*) OVER() AS TOTAL_ORDERED_AMOUNT_total_rows,\n    --COUNT(CASE WHEN TOTAL_ORDERED_AMOUNT IS NULL THEN 1 END) AS \"TOTAL_ORDERED_AMOUNT_missing\",\n    ROUND(100.0 * COUNT(CASE WHEN TOTAL_ORDERED_AMOUNT IS NULL THEN 1 END) / NULLIF(COUNT(*), 0), 2) AS \"TOTAL_ORDERED_AMOUNT_missing_percentage\", \n\n    --COUNT(*) OVER() AS RECENCY_SCORE_total_rows,\n    --COUNT(CASE WHEN RECENCY_SCORE IS NULL THEN 1 END) AS \"RECENCY_SCORE_missing\",\n    ROUND(100.0 * COUNT(CASE WHEN RECENCY_SCORE IS NULL THEN 1 END) / NULLIF(COUNT(*), 0), 2) AS \"RECENCY_SCORE_missing_percentage\", \n\n    --COUNT(*) OVER() AS FREQUENCY_SCORE_total_rows,\n    --COUNT(CASE WHEN FREQUENCY_SCORE IS NULL THEN 1 END) AS \"FREQUENCY_SCORE_missing\",\n    ROUND(100.0 * COUNT(CASE WHEN FREQUENCY_SCORE IS NULL THEN 1 END) / NULLIF(COUNT(*), 0), 2) AS \"FREQUENCY_SCORE_missing_percentage\", \n\n    --COUNT(*) OVER() AS MONETARY_SCORE_total_rows,\n    --COUNT(CASE WHEN MONETARY_SCORE IS NULL THEN 1 END) AS \"MONETARY_SCORE_missing\",\n    ROUND(100.0 * COUNT(CASE WHEN MONETARY_SCORE IS NULL THEN 1 END) / NULLIF(COUNT(*), 0), 2) AS \"MONETARY_SCORE_missing_percentage\", \n\n    --COUNT(*) OVER() AS RFM_SCORE_total_rows,\n    --COUNT(CASE WHEN RFM_SCORE IS NULL THEN 1 END) AS \"RFM_SCORE_missing\",\n    ROUND(100.0 * COUNT(CASE WHEN RFM_SCORE IS NULL THEN 1 END) / NULLIF(COUNT(*), 0), 2) AS \"RFM_SCORE_missing_percentage\"\n\nFROM HACKATHON.DATA_SAMPLE.PIZZA_CUSTOMERS\n\n", "relation_name": "HACKATHON.TEAM_06.null_detector"}], "elapsed_time": 3.259735345840454, "args": {"write_json": true, "partial_parse": true, "print": true, "invocation_command": "dbt run -s null_detector.sql", "require_explicit_package_overrides_for_builtin_materializations": false, "static_parser": true, "log_format_file": "debug", "log_level": "info", "introspect": true, "macro_debugging": false, "cache_selected_only": false, "use_colors_file": true, "populate_cache": true, "log_format": "default", "quiet": false, "profiles_dir": "/workspace/DBT-Hackathon-2024", "enable_legacy_logger": false, "indirect_selection": "eager", "log_path": "/workspace/DBT-Hackathon-2024/logs", "version_check": true, "vars": {}, "warn_error_options": {"include": [], "exclude": []}, "printer_width": 80, "select": ["null_detector.sql"], "use_colors": true, "strict_mode": false, "which": "run", "project_dir": "/workspace/DBT-Hackathon-2024", "log_level_file": "debug", "defer": false, "show_resource_report": false, "favor_state": false, "send_anonymous_usage_stats": true, "exclude": [], "log_file_max_bytes": 10485760, "partial_parse_file_diff": true}}